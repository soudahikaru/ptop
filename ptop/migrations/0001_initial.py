# Generated by Django 3.0.3 on 2020-08-13 01:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ptop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator('Invalid email address.')])),
                ('phs_number', models.CharField(max_length=10, unique=True)),
                ('authority_level', models.IntegerField(choices=[(0, '一般オペレータ'), (1, 'チーフオペレータ'), (2, 'システム管理者')], null=True)),
                ('experience_level', models.IntegerField(choices=[(0, '新人'), (1, '一般'), (2, 'ベテラン')], null=True)),
                ('registered_date', models.DateField(null=True)),
                ('expired_date', models.DateField(blank=True, null=True)),
                ('is_operator', models.BooleanField(default=True, help_text='Designates whether this user is listed in operator list.')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether this user can log into this admin site.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', ptop.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('authority_level', models.IntegerField(choices=[(0, '一般オペレータ'), (1, 'チーフオペレータ'), (2, 'システム管理者')])),
                ('experience_level', models.IntegerField(choices=[(0, '新人'), (1, '一般'), (2, 'ベテラン')])),
                ('registered_date', models.DateField()),
                ('expired_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TroubleEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('device_id', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('cause', models.TextField(null=True)),
                ('temporary_action', models.TextField(null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('downtime', models.IntegerField(null=True)),
                ('delaytime', models.IntegerField(null=True)),
                ('delay_flag', models.BooleanField(default=False)),
                ('approval_operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='troubleevent_approved', to=settings.AUTH_USER_MODEL)),
                ('handling_operators', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('input_operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='troubleevent_inputed', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
